version: 2.0

build_jobs: &build_jobs
  jobs:
    - build-amd64
    - build-arm
    - push-manifest:
        requires:
          - build-amd64
          - build-arm

workflows:
  version: 2
  commit:
    <<: *build_jobs
  nightly:
    <<: *build_jobs
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master

shared: &shared
  docker:
    - image: docker:stable-git
  steps:
    - checkout

    - setup_remote_docker:
        docker_layer_caching: true

    - run:
        name: Install build dependencies.
        command: apk add --upgrade --no-cache bash curl git

    - run:
        name: Add dynamic shared vars to env.
        command: |
          .circleci/load_env.sh

    - run:
        name: Build and push Docker image.
        command: |
          source $BASH_ENV
          .circleci/build-image.sh

jobs:
  build-amd64:
    <<: *shared
    environment:
      TAG: amd64
      TARGET: amd64
      QEMU_ARCH: amd64
  build-arm:
    <<: *shared
    environment:
      QEMU_ARCH: arm
      TAG: arm
      TARGET: arm32v7

  push-manifest:
    docker:
      - image: docker:18
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Add dynamic shared vars to env.
          command: |
            apk add --upgrade --no-cache bash curl jq
            .circleci/load_env.sh

      - run:
          name: Install manifest-tool.
          command: |
            .circleci/install_manifest_tool.sh

      - run:
          name: Push Docker manifest.
          command: |
            source $BASH_ENV
            echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin;

            # Re-tag the ARM image as arm64 -- they're compatigble in this case.
            docker pull "$REGISTRY/$IMAGE:$VERSION-arm"
            docker tag \
              "$REGISTRY/$IMAGE:$VERSION-arm" \
              "$REGISTRY/$IMAGE:$VERSION-arm64"
            docker push "$REGISTRY/$IMAGE:$VERSION-arm64"

            manifest-tool push from-args \
              --platforms linux/amd64,linux/arm,linux/arm64 \
              --template "$REGISTRY/$IMAGE:$VERSION-ARCH" \
              --target "$REGISTRY/$IMAGE:$VERSION"

            if [ "${CIRCLE_BRANCH}" == 'master' ]; then
              manifest-tool push from-args \
                --platforms linux/amd64,linux/arm,linux/arm64 \
                --template "$REGISTRY/$IMAGE:$VERSION-ARCH" \
                --target "$REGISTRY/$IMAGE:latest"
            fi
